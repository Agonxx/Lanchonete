@page "/"
@using Lanchonete.Shared.Dtos
@using Lanchonete.WEB.Services.Interfaces

@inject IPedidoService _pedidoService

<PageTitle>Home</PageTitle>

<div class="titulo">
	<h1>Lanchonete</h1>
	<MudButton @onclick="RandomizeData" Variant="Variant.Filled" Class="mx-4">Randomize</MudButton>
</div>

<div class="graficos">
	<MudPaper Class="pa-4">
		<MudChart ChartType="ChartType.Pie" InputData="@data" @bind-SelectedIndex="Index" InputLabels="@labels" Width="300px" Height="300px" />
	</MudPaper>

	<MudPaper Class="pa-4">
		<MudChart ChartType="ChartType.Pie" InputData="@data" @bind-SelectedIndex="Index" InputLabels="@labels" Width="300px" Height="300px" />
	</MudPaper>
</div>

<style>
	.graficos {
		display: flex;
		gap: 10px;
		justify-content: space-around;
		margin: 15px 0px;
		flex-wrap: wrap;
	}

	.titulo {
		display: flex;
		gap: 10px;
		justify-content: space-between;
		margin: 15px 0px;
		flex-wrap: wrap;
	}
</style>
@code {

	private int Index = -1; //default value cannot be 0 -> first selectedindex is 0.
	int dataSize = 4;
	double[] data = { 77 };
	string[] labels = { "Uranium", "Plutonium", "Thorium", "Caesium", "Technetium", "Promethium",
						"Polonium", "Astatine", "Radon", "Francium", "Radium", "Actinium", "Protactinium",
						"Neptunium", "Americium", "Curium", "Berkelium", "Californium", "Einsteinium", "Mudblaznium" };

	Random random = new Random();

	protected override async Task OnInitializedAsync()
	{
	}

	void RandomizeData()
	{
		var new_data = new double[dataSize];
		for (int i = 0; i < new_data.Length; i++)
			new_data[i] = random.NextDouble() * 100;
		data = new_data;
		StateHasChanged();
	}
}